basePath: /
definitions:
  controller.UserCredentials:
    properties:
      email:
        minLength: 8
        type: string
      password:
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  controller.authResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/model.User'
    type: object
  controller.clientResponse:
    properties:
      user:
        $ref: '#/definitions/model.User'
    type: object
  model.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: Auth-JWT
  title: Auth-JWT
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: user login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.UserCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/controller.authResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login
      tags:
      - auth
  /auth/logout:
    get:
      consumes:
      - application/json
      description: user logout
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Logout
      tags:
      - auth
  /auth/refresh:
    get:
      consumes:
      - application/json
      description: user refresh
      operationId: refresh
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/controller.authResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: user registration
      operationId: register
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.UserCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.authResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register
      tags:
      - auth
  /me:
    get:
      consumes:
      - application/json
      description: get user
      operationId: get-user
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/controller.clientResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - client
securityDefinitions:
  JWT:
    description: JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
